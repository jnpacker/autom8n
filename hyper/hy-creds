#!/usr/bin/bash

clusterName=$1
if [ "${clusterName}" == "" ]; then
  printf "\n>> WARNING <<  Missing clusterName: hy-creds <CLUSTER_NAME>\n"
  exit 1
fi

kubeconfig=$(echo $HOME)/.kube/config
kubeconfig_context=$(mktemp --suffix=_context)
hypershift create kubeconfig --name ${clusterName} > ${kubeconfig_context}

oc config use-context ${HYP_MANAGEMENTCLUSTER} > /dev/null 2>&1
if [ $? -ne 0 ]; then
  echo "Could not use-context: ${HYP_MANAGEMENTCLUSTER}"
  rm ${kubeconfig_context}
  exit 1
fi

passwd=$(oc -n clusters-${clusterName} get secrets kubeadmin-password -o json | jq '.data.password' | tr -d '\"' | base64 -d)
if [ $? -ne 0 ]; then
  echo "Could not find password for context: ${clusterName}"
  rm ${kubeconfig_context}
  exit 1
fi

export KUBECONFIG=${kubeconfig_context}
oc config use-context ${clusterName} > /dev/null 2>&1
url=$(oc -n openshift-console get route console -o jsonpath='{.status.ingress[*].host}')

echo "User name: kubeadmin"
echo "Password : ${passwd}"
printf "\n"
printf "OCP Console: https://${url}"
curl -k  https://${url} 2>&1 | grep "Red Hat OpenShift Container Platform" > /dev/null 2>&1
if [ $? -eq 0 ]; then
  printf " \e[0;32mOK\n\e[m"
else
  printf " \e[0;31mUNAVAILABLE\n\e[m"
fi

printf "ACM Console: https://${url/console-openshift-console/multicloud-console}"
curl -k  https://${url/console-openshift-console/multicloud-console} 2>&1 | grep "Found" > /dev/null 2>&1
if [ $? -eq 0 ]; then
  printf " \e[0;32mOK\n\e[m"
else
  printf " \e[0;31mUNAVAILABLE\n\e[m"
fi

rm ${kubeconfig_context}